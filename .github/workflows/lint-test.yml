name: "Lint and Test"

on:
  push:
    branches:
      - '**'
    tags:
      - '!**'
  pull_request:
    branches:
      - '**'

jobs:
#  lint:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        python-version: [ "3.7", "3.8", "3.9", "3.10" , "3.11" ]
#    steps:
#    - uses: actions/checkout@v3
#      with:
#        submodules: true
#        fetch-depth: 1
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v4
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip -q install -r requirements.txt
#        pip -q install -r requirements-dev.txt
#    - name: Compile all
#      run: |
#        python -m compileall odmpy tests
#    - name: Analysing the code with black
#      run: |
#        black --check setup.py odmpy tests
#    - name: Analysing the code with flake8
#      run: |
#        flake8 setup.py odmpy tests
#    - name: Analysing the code with pylint
#      run: |
#        pylint setup.py odmpy tests
#    - name: Analysing the code with mypy
#      run: |
#        mypy --package odmpy --package tests

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ubuntu-latest, windows-latest]
        os: [windows-latest]
        python-version: [ "3.7", "3.8", "3.9", "3.10" , "3.11" ]
#    needs: lint
    steps:
    - uses: FedericoCarboni/setup-ffmpeg@v2
      id: setup-ffmpeg
    - uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip -q install -r requirements.txt
        python3 -m pip -q install -r requirements-dev.txt
    - name: Run tests on ${{ matrix.os }} with python ${{ matrix.python-version }}
      env:
        test_build_env: "${{ matrix.os }}_${{ matrix.python-version }}"
      run: |
        cd ${GITHUB_WORKSPACE}
        echo "$test_build_env"
        sh run_tests.sh
      shell: bash
    - uses: actions/upload-artifact@v3
      with:
        name: test-epub-artifacts
        path: epubs
        if-no-files-found: warn
    - name: Test installation process
      run: |
        python3 setup.py install
        odmpy --version
      shell: bash
